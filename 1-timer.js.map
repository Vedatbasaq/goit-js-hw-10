{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// 1-timer.js\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst dateInput = document.querySelector('#datetime-picker');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selected = selectedDates[0];\n    const now = new Date();\n\n    if (selected <= now) {\n      iziToast.warning({\n        title: 'UyarÄ±',\n        message: 'Please choose a date in the future',\n        position: 'topCenter',\n      });\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = selected;\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(dateInput, options);\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  dateInput.disabled = true;\n\n  countdownInterval = setInterval(() => {\n    const now = new Date();\n    const diff = userSelectedDate - now;\n\n    if (diff <= 0) {\n      clearInterval(countdownInterval);\n      updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      return;\n    }\n\n    const time = convertMs(diff);\n    updateTimerDisplay(time);\n  }, 1000);\n});\n"],"names":["startBtn","dateInput","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","countdownInterval","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","updateTimerDisplay","options","selectedDates","selected","iziToast","flatpickr","diff","time"],"mappings":"2GAOA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KACnBC,EAAoB,KAExB,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAmB,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7Db,EAAO,YAAcM,EAAeI,CAAI,EACxCT,EAAQ,YAAcK,EAAeK,CAAK,EAC1CT,EAAU,YAAcI,EAAeM,CAAO,EAC9CT,EAAU,YAAcG,EAAeO,CAAO,CAChD,CAEA,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAWD,EAAc,CAAC,EAG5BC,GAFQ,IAAI,MAGdC,EAAS,QAAQ,CACf,MAAO,QACP,QAAS,qCACT,SAAU,WAClB,CAAO,EACDpB,EAAS,SAAW,KAEpBM,EAAmBa,EACnBnB,EAAS,SAAW,GAExB,CACF,EAEAqB,EAAUpB,EAAWgB,CAAO,EAE5BjB,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBC,EAAU,SAAW,GAErBM,EAAoB,YAAY,IAAM,CAEpC,MAAMe,EAAOhB,EADD,IAAI,KAGhB,GAAIgB,GAAQ,EAAG,CACb,cAAcf,CAAiB,EAC/BS,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,EAAG,EAChE,MACF,CAEA,MAAMO,EAAOb,EAAUY,CAAI,EAC3BN,EAAmBO,CAAI,CACzB,EAAG,GAAI,CACT,CAAC"}